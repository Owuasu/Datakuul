Movie <- read_csv('DATAKUUL PROJECTS/')
library(tidyverse)
gapminder <- read_csv("C:/Users/USER/Datakuul/r/data/raw/gapminder1960to2010_socioeconomic.csv")
head(gapminder)
names(gapminder)
head(gapminder, n = 78)
tail(gapminder)
tail(gapminder, n = 5000)
gapminder
dim(gapminder)
dim(gapminder)
nrow(gapminder)
ncol(gapminder)
gapminder
gapminder[ , c("country", "life_expectancy", "income_per_person")]
gapminder[, c("country", "children_per_woman", "population")]
Renaming <- gapminder[, c("country", "children_per_woman", "population")]
Renaming
gapminder[1:5, ]
gapminder
names(gapminder)
gapminder[ , c("life_expectancy", "income_per_person", "world_region")]
income_on_life_expectancy <- gapminder[ , c("life_expectancy", "income_per_person", "world_region")]
income_on_life_expectancy
ggplot(data = income_on_life_expectancy, mapping = aes(x = life_expectancy, y = income_per_person, colour = world_region)) + geom_point()
gapminder[ , c("child_mortality", "children_per_woman", "world_region")]
child_mortality_per_woman <- gapminder[ , c("child_mortality", "children_per_woman", "world_region")]
child_mortality_per_woman
ggplot(data = child_mortality_per_woman, mapping = aes(x = child_mortality, y = children_per_woman, colour = world_region)) + geom_line()
gapminder[ , c("life_expectancy_male", "life_expectancy_female", "world_region")]
male_and_female_life_expectancy <- gapminder[ ,c("life_expectancy_male", "life_expectancy_female", "world_region")]
male_and_female_life_expectancy
ggplot(data = male_and_female_life_expectancy, mapping = aes(x = life_expectancy_female, y = life_expectancy_male, colour = world_region)) + geom_point()
ggplot(data = male_and_female_life_expectancy, mapping = aes(x = life_expectancy_male, y = life_expectancy_female, colour = world_region)) + geom_curve()
ggplot(data = male_and_female_life_expectancy, mapping = aes(x = life_expectancy_male, y = life_expectancy_female, colour = world_region)) + geom_curve()
gapminder[ , c("life_expectancy_male", "income_per_person", "world_region")]
male_income_person <- gapminder[ , c("life_expectancy_male", "income_per_person", "world_region")]
male_income_person
ggplot(data = male_income_person, mapping = aes(x = life_expectancy_male, y = income_per_person, colour = world_region)) + geom_point()
gapminder[ , c("life_expectancy_female", "children_per_woman", "world_region")]
gapminder[ , c("life_expectancy_female", "main_religion", "world_region")]
female_main_religion <- gapminder[ , c("life_expectancy_female", "main_religion", "world_region")]
female_main_religion
ggplot(data = female_main_religion, mapping = aes(x = life_expectancy_female, y = main_religion, colour = world_region)) + geom_point()
my colour <- c("yellow", "green", "red" "black", "orange","brown", "purple", "violet", "blue"", ")
clean_gapminder %|% mutate(income_per_capital)
read_csv()
gapminder
gapminder %>% filter(country=="Nigeria")
nigeria_data <- gapminder %>% filter(country=="Nigeria")
nigeria_data
testing_countries_with_filter <- gapminder %>% filter (country == c("Angola","Nigeria","Benin"))
testing_countries_with_filter
gapminder %>% filter (country=="Angola")
testing_countries_with_filter
gapminder %>% filter (country=="Benin")
gapminder %>% filter (country=="Bahamas")
gapminder %>% filter (country=="Bahamas")
gapminder %>% filter (country=="Australia")
gapminder %>% filter (country== c("Angola", "Nigeria", "Benin"))
library(tidyverse)
gapminder %>% filter (country== c("Angola", "Nigeria", "Benin"))
gapminder
gapminder %>% filter (country== c("Angola", "Nigeria", "Benin"))
gapminder %>% filter (country=="Australia")
column_gapminder <- gapminder %>% mutate(population_income = population/income_per_person)
column_gapminder
gapminder %>% mutate(life_expectancy_income = life_expectancy*income_per_person)
column_gapminder_2 <- gapminder %>% mutate(life_expectancy_income = life_expectancy*income_per_person)
column_gapminder_2
population_per_million <- gapminder %>% mutate(population_per_million =population/1e6)
population_per_million
population_per_million_2 <- gapminder %>% mutate(population_per_million =population/1e6)
population_per_million_2
population_per_million_2 <- gapminder %>% select(country,population,main_religion) %>% mutate(population_per_million = population/1e6) %>% mutate(population_category = case_when(population_per_million < 10 ~ "sparsely_populated", population_per_million > 10 ~ "densely_populated"))
population_per_million_2
population_per_million_2 <- gapminder %>% select(country,population,main_religion) %>% mutate(population_per_million = population/1e6) %>% mutate(population_category = case_when(population_per_million < 10 ~ "sparsely_populated", population_per_million > 10 ~ "densely_populated")) %>% rename(population_density = population_category)
population_per_million_2
library(tidyverse)
library(tidyverse)
new_woman_income <- gapminder %>% select(country,children_per_woman, income_groups, world_region,income_per_person)
new_woman_income <- gapminder %>% select(country,children_per_woman, income_groups, world_region,income_per_person)
gapminder
gapminder %>% select (country,children_per_woman, income_groups, world_region,income_per_person)
new_woman_income_2 <- gapminder %>% select(country,children_per_woman, income_groups, world_region,income_per_person) %>% filter(country== "Antigua and Barbuda")
new_woman_income_2
new_woman_income_3 <- gapminder %>% select(country,children_per_woman, income_groups, world_region,income_per_person) %>% filter(country== "angola")
new_woman_income_3
cal_volume <- function(length, width, height){
volume <- length*width*height
return(volume)
}
cal_volume(5,7,9)
cal_volume(14,56,13)
cal_area <- function(length, breadth){
area <- length * breadth
return(area)
}
cal_area <- function(length, breadth){
area <- length * breadth
return(area)
}
cal_area(45,10)
cal_area(6,16)
cal_area(6,16)
getwd
library(tidyverse)
getwd
getwd
library(tidyverse)
library(tidyverse)
dat <- read.csv("data/inflammation-01.csv")
dat
dat <- read.csv("data/inflammation-01.csv")
property_data
library(tidyverse)
property_data <- read_csv('house_data_bricks_and_acres.xlsx')
property_data
ggplot(property_data_2DHF, aes(x = Year, y = Prices, colour = 'Region/Country_name')) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 4)) +
labs(title = "Comparison of House Prices Across Cities by Year")
ggplot(property_data_LAF, aes(x = Year, y = Prices, colour = 'Region/Country_name')) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 4)) +
labs(title = "Comparison of House Prices Across Cities by Year")
library(tidyverse)
ggplot(low_quality_wines, aes(x = reorder(taster_name, points), y = points, fill = country)) +
geom_bar(stat = "identity") +
labs(title = "Wines with Points < 45",
x = "Wine Name",
y = "Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
head(low_quality_wines)
most_expensive_wine <- wines %>% filter(price == max(price, na.rm = TRUE))
setwd("C:/Users/user/Datakuul/r/data/raw/skills_project/The Great Wine Company")
library(tidyverse)
wines <- read_csv('winemag-data-130k-v2.csv')
high_quality_wines <- wines %>% filter(points >= 90)
high_quality_wines
country_quality_summary <- high_quality_wines %>%
group_by(country) %>%
summarise(count = n(), average_points = mean(points), .groups = 'drop')
country_quality_summary
ggplot(country_quality_summary, aes(x = reorder(country, -average_points), y = average_points)) +
geom_dotplot(stat = "identity", fill = "orange") +
labs(title = "Average Points of High Quality Wines by Country",
x = "Country",
y = "Average Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
most_expensive_wine <- wines %>% filter(price == max(price, na.rm = TRUE))
most_expensive_wine
cat("Most Expensive Wine:\n")
print(most_expensive_wine)
low_quality_wines <- wines %>% filter(points < 45)
low_quality_wines
low_quality_wines
head(low_quality_wines)
ggplot(low_quality_wines, aes(x = reorder(taster_name, points), y = points, fill = country)) +
geom_bar(stat = "identity") +
labs(title = "Wines with Points < 45",
x = "Wine Name",
y = "Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(low_quality_wines, aes(x = reorder(taster_name, points), y = points, fill = country)) +
geom_bar(stat = "identity") +
labs(title = "Wines with Points Less Than 45",
x = "Wine Name",
y = "Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()  # Optional: Flips the axes for better readability if there are many wines
} else {
low_quality_wines_practice <- wines %>% filter(points < 90)
low_quality_wines_practice
ggplot(low_quality_wines, aes(x = reorder(taster_name, points), y = points, fill = country)) +
geom_bar(stat = "identity") +
labs(title = "Wines with Points < 90",
x = "Wine Name",
y = "Points") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("high_quality_wine_countries.png")
ggsave("low_quality_wines.png")
cat("Wines to Consider Not Supplying Anymore:\n")
print(low_quality_wines)
install.packages("tidyverse")
=======
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
Movies <- read_csv('movie.csv')
setwd("C:/Users/user/Datakuul/r/data/raw/skills_project/MovieLens Ltd")
Movies
genre_counts <- Movies %>% select(Action:Western) %>% summarise_all(sum)
print("Number of movies in each genre:")
print(genre_counts)
Ratings
Ratings
Ratings
movies_ratings <- Ratings %>% inner_join(Movies, by = 'movie id')
Ratings
library(tidyverse)
Ratings
Ratings <- read_csv('ratings.csv')
Ratings
movies_ratings <- Ratings %>% inner_join(Movies, by = 'movie id')
movies_ratings <- Ratings %>% inner_join(Movies, by = 'movie id')
movies_ratings
movies_ratings
genre_ratings <- movies_ratings %>% pivot_longer(cols = Action:Western, names_to = 'genre', values_to = 'is_genre') %>% filter(is_genre == 1) %>% group_by(genre) %>% summarise(avg_rating = mean(rating), num_ratings = n()) %>% arrange(desc(avg_rating))
print('Genres moist liked by users(average rating):')
print(genre_ratings)
movie_preferences <- movies_ratings %>% group_by('movie id', 'movie_title') %>% group_by(avg_rating = mean(rating), num_ratings = n()) %>% arrange(desc(avg_rating))
library(tidyverse)
movie_preferences
top_movies <- movie_preferences %>% filter(num_ratings > 50) %>%
arrange(desc(avg_rating))
top_movies
print("Top movies preferred by users (based on average rating with >50 ratings):")
print(top_movies)
most_rated_movies <- movie_preferences %>%
arrange(desc(num_ratings))
most_rated_movies
print("Movies rated most frequently:")
print(most_rated_movies)
Users <- read_csv('user.csv')
Users
Users <- read_csv('user.csv')
Users
user_ratings <- Ratings %>% inner_join(Users, by = "user id") %>%
inner_join(Movies, by = "movie id")
user_ratings
age_ratings <- user_ratings %>% group_by(age) %>% summarise(avg_rating = mean(rating), num_ratings = n()) %>% arrange(desc(avg_rating))
age_ratings <- user_ratings %>% group_by(age) %>% summarise(avg_rating = mean(rating), num_ratings = n()) %>% arrange(desc(avg_rating))
age_ratings
print("Relationship between age and movie ratings:")
print(age_ratings)
occupation_ratings <- user_ratings %>% group_by(occupation) %>% summarise(avg_rating = mean(rating), num_ratings = n()) %>% arrange(desc(avg_rating))
print("Relationship between occupation and movie ratings:")
print(occupation_ratings)
ggplot(genre_ratings, aes(x = reorder(genre, avg_rating), y = avg_rating)) + geom_col(fill = "red") + coord_flip() + labs(title = "Average Ratings by Genre", x = "Genre", y = "Average Rating")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_col(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_point(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_boxplot(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_violin(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_bin_2d(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_bar(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_dotplot(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_line(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
ggplot(most_rated_movies[1:10,], aes(x = reorder('movie title', 'num_ratings'), y = num_ratings)) + geom_col(fill = "darkgreen") + coord_flip() + labs(title = "Top 10 Most Rated Movies", x = "Movie", y = "number of Ratings")
setwd("C:/Users/user/Datakuul/r/data/raw/skills_project/Bricks and Acres Ltd")
