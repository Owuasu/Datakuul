
I learnt how to distinguish between nano and touch

i learnt the command lines and their respective functions such as  mkdir which is to make or create directory or folder, ch for changing from one directory/folder and file to another, ls is to list the contents of a folder or file, control A is the begining of a file, control E is the ending of a file of folder, pwd is to print working directory, ls -alrht is to list all rights available, ls -a is to list all on directory and file on desktop, rm -rf name of file is to remove file, cd is change directory, f12 is my whirly sign, cd f12/Desktop/ cd f12/Documents cd f12/Downloads is to change directories from one location to another, nano name of file is to create, name and edit a file, touch is to create and name a file, control O is to save in nano, enter and control E is to exit/close in nano. cd - changes from one directory to another, single . and double .. shows hidden filders, clear is to clear all typings on the terminal. rm is to remove a file in .txt, .pdf and ..docs, mv is to rename a folder or file, 

In GitHub, i learnt this is for control versioning. cd my f12 is to go back to home directory, cd . is to go back to my current folder, cd - is to go back to my previous directory or folder, ls | wc is to list the word count into another conduit/pipe, where \ is the pipe and wc is word count, the up arrow is to call back the last command executed. ls | wc -l and enter gives the line items, ls | grep "*.pdf" is to list all pdf files, ls | ".pdf", ls | grep ".doc" this lists all files, ls | grep -c ".pdf", ls | grep -c ".doc" counts all the files, man | grep shows all short cut functions for use on the terminal, man is manual and to close from the man grep, type the letter Q to exit.

which git is to find out if you have a folder and configure the git to your name. Here we also used git config --global user.name "owuasu" to name my git hub, git config --global user.email "ubaobi71@gmail.com" was used to set up my email address, git config --list and git config --global colour u.i :auto: was used as default to set up my github page. git config --global core.editor :nano -v" was used to configure and talk tomy github which is used for versioning.

from the github page, to create a folder, put user name, make public and create repository. To create a folder or repository, go to repository and click on new or anywhere you see new. create user name as datakuul, make public, initiate a read me file, though optional, git ignore. Anything you put on the git ignore will not show on the github. click create repository, copy the http url, go to your terminal, git clone and paste the url on the terminal or in the alternative, copy all repository and paste on the terminal. If you ant to know the status of your file, git add, git commit to save, final repository, git push goes into the bash folder datakuul which i have created. local is your laptop, origin is the github page and main is the branch. git status compares what you have on the laptop/terminal to the github page/internet. use git add after editing in nano, use git commit to save permanently.
